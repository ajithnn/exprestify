0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@2.7.4
3 info using node@v0.12.2
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec { raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/z085331/gitPro/exprestify',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/z085331/.npm/exprestify/0.3.1/package.tgz not in flight; packing
9 verbose tar pack [ '/Users/z085331/.npm/exprestify/0.3.1/package.tgz',
9 verbose tar pack   '/Users/z085331/gitPro/exprestify' ]
10 verbose tarball /Users/z085331/.npm/exprestify/0.3.1/package.tgz
11 verbose folder /Users/z085331/gitPro/exprestify
12 info prepublish exprestify@0.3.1
13 verbose addLocalTarball adding from inside cache /Users/z085331/.npm/exprestify/0.3.1/package.tgz
14 silly cache afterAdd exprestify@0.3.1
15 verbose afterAdd /Users/z085331/.npm/exprestify/0.3.1/package/package.json not in flight; writing
16 verbose afterAdd /Users/z085331/.npm/exprestify/0.3.1/package/package.json written
17 silly publish { name: 'exprestify',
17 silly publish   version: '0.3.1',
17 silly publish   description: 'REST API built using express framework,with support for socket io and adding custom headers at server side',
17 silly publish   main: 'index.js',
17 silly publish   scripts: { test: 'echo "Error: no test specified" && exit 1' },
17 silly publish   repository:
17 silly publish    { type: 'git',
17 silly publish      url: 'https://github.com/ajithnn/exprestify.git' },
17 silly publish   keywords: [ 'express', 'REST', 'JSON', 'Multipart form', 'GET POST' ],
17 silly publish   author: { name: 'Ajith N N', email: 'ajithnn20@gmail.com' },
17 silly publish   license: 'ISC',
17 silly publish   bugs: { url: 'https://github.com/ajithnn/exprestify/issues' },
17 silly publish   homepage: 'https://github.com/ajithnn/exprestify',
17 silly publish   dependencies:
17 silly publish    { 'body-parser': '^1.12.3',
17 silly publish      express: '^4.12.3',
17 silly publish      http: '0.0.0',
17 silly publish      multer: '^0.1.8',
17 silly publish      pem: '^1.7.2',
17 silly publish      'socket.io': '*' },
17 silly publish   readme: '# Exprestify\n\n  REST API Module built on top of Express. This project was created as creating REST CRUD calls on express required \n  multiple dependencies. This is an effort to combine all those dependencies to provide a simpler interface.\n  \n## Features\n\n  - POST interface which can handle JSON/form-encoded data in a single interface.\n  - Multipart Post interface which can handle both files and fields, built on multer.\n  - GET and GETFILE interface to easily create GET calls.\n  - PUT and DELETE functions. \n\n## Installation\n\nTo install exprestify run:\n\n    $ npm install exprestify\n\nTo add to your project as a dependency:\n\n    $ npm install --save exprestify\n \n## Usage\n\n```js\nvar rest = require(\'exprestify\')\nvar fs = require(\'fs\')\n// nly fr HTTPS examples.\nvar creds = {\n    key: fs.readFileSync(\'./assets/key.pem\'),\n    cert: fs.readFileSync(\'./assets/key-cert.pem\')\n}\n\nvar header ={\n"Access-Control-Allow-Origin":"http://localhost:4000",\n"Access-Control-Allow-Methods":"GET,PUT,POST,DELETE",\n"Access-Control-Allow-Headers":"Content-Type"\n}; // header JSOn to set HTTP Headers -  format : { HeaderName : HeaderValue }\n\n// Set HTTP Headers\nrest.setHeaders(header);\n\n// Ways of using get.\nrest.get(\'/\', "This is returned")\nrest.get(\'/page1\', function (err, query, contentType) {\n    if (!err) {\n        console.log(contentType);\n        if (query.value == 1) {\n            return "This is still page1";\n        } else {\n            return "This is page1";\n        }\n    } else {\n        console.log(err);\n    }\n})\nrest.get(\'/page2\', "This is page2")\nrest.get(\'/page3\', "This is page3")\n\n\n// GET File to get a file from the server.\nrest.getfile(\'/index\', function (err, query) {\n    if (!err) {\n        if (query.value) {\n            return "./html/index1.html";\n        } else {\n            return "./html/index.html";\n\n        }\n    } else {\n        console.log(err);\n        return err;\n    }\n})\n\n\nopt = {\n    extended: false\n}\n// Options object for post. contentType can be text,json,raw or urlencoded.\nvar options = {\n    contentType: "text",\n    config: opt\n}\n\nrest.post(\'/pagepost\', function (err, data) {\n    if (!err) {\n        return data;\n    } else {\n        console.log(err);\n    }\n}, options)\n\n\n// Options object for MultiPart Post.\n// This is the multer options object for the multipart Post.\nvar multiopt = {\n    FilePath: "./assets/",\n    PostType: "file",\n    Rename: function () {\n        return "File1";\n    }\n}\n\nrest.multipost(\'/pagemulti\', function (err, data) {\n    if (!err) {\n        console.log(data);\n    } else {\n        console.log(err);\n    }\n}, multiopt)\n\n\nvar multiopt1 = {\n    FilePath: "./html/",\n    PostType: "file",\n    Rename: function (fieldname, filename) {\n        return fieldname;\n    }\n}\n\nrest.multipost(\'/pagemulti1\', function (err, data) {\n    if (!err) {\n        console.log(data);\n    } else {\n        console.log(err);\n    }\n}, multiopt1)\n\n\nrest.put(\'/api/put/:id\', function (err, data) {\n    if (!err) {\n        console.log(data);\n        return "Updated id " + data.id\n    } else {\n        console.log(err);\n    }\n})\n\nrest.delete(\'/api/delete/:id\', function (err, data) {\n    if (!err) {\n        console.log(data);\n        return "Deleted id " + data.id\n    } else {\n        console.log(err);\n    }\n})\n\n\n\nrest.listens(3443, creds, function () {\n    console.log("Listening on port 0.0.0.0:%s", rest.ports)\n})\n\nrest.listen(3000, function () {\n    console.log("Listening on port 0.0.0.0:%s", rest.port)\n})\n```\n## TODO\n\n - Mocha Tests.\n - Add more Multer options to Multipart Post handler.\n\n## License\n\n(The MIT License)\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\'Software\'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \'AS IS\', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n',
17 silly publish   readmeFilename: 'README.md',
17 silly publish   gitHead: '984174365f5ecf18be3eba1f9c30d56c1ba49c69',
17 silly publish   _id: 'exprestify@0.3.1',
17 silly publish   _shasum: '956cb2393e8e9a7b80bb1ab1869aa1c3b868f614',
17 silly publish   _from: '.' }
18 silly mapToRegistry name exprestify
19 silly mapToRegistry using default registry
20 silly mapToRegistry registry https://registry.npmjs.org/
21 silly mapToRegistry uri https://registry.npmjs.org/exprestify
22 verbose publish registryBase https://registry.npmjs.org/
23 silly publish uploading /Users/z085331/.npm/exprestify/0.3.1/package.tgz
24 verbose request uri https://registry.npmjs.org/exprestify
25 verbose request sending authorization for write operation
26 info attempt registry request try #1 at 11:51:53 AM
27 verbose request using bearer token for auth
28 verbose request id ab03bd89da89c983
29 http request PUT https://registry.npmjs.org/exprestify
30 http 404 https://registry.npmjs.org/exprestify
31 verbose headers { date: 'Mon, 27 Apr 2015 06:22:29 GMT',
31 verbose headers   server: 'Apache',
31 verbose headers   'content-type': 'application/json',
31 verbose headers   'cache-control': 'max-age=0',
31 verbose headers   'content-length': '21',
31 verbose headers   'accept-ranges': 'bytes',
31 verbose headers   via: '1.1 varnish',
31 verbose headers   'x-served-by': 'cache-sn87-SIN',
31 verbose headers   'x-cache': 'MISS',
31 verbose headers   'x-cache-hits': '0',
31 verbose headers   'x-timer': 'S1430115721.122387,VS0,VE28169',
31 verbose headers   'keep-alive': 'timeout=10, max=50',
31 verbose headers   connection: 'Keep-Alive' }
32 verbose request invalidating /Users/z085331/.npm/registry.npmjs.org/exprestify on PUT
33 error publish Failed PUT 404
34 verbose stack Error: Not found : exprestify
34 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:247:14)
34 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:170:14)
34 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:344:22)
34 verbose stack     at Request.emit (events.js:110:17)
34 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1239:14)
34 verbose stack     at Request.emit (events.js:129:20)
34 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1187:12)
34 verbose stack     at IncomingMessage.emit (events.js:129:20)
34 verbose stack     at _stream_readable.js:908:16
34 verbose stack     at process._tickCallback (node.js:355:11)
35 verbose statusCode 404
36 verbose pkgid exprestify
37 verbose cwd /Users/z085331/gitPro/exprestify
38 error Darwin 14.1.0
39 error argv "node" "/usr/local/bin/npm" "publish"
40 error node v0.12.2
41 error npm  v2.7.4
42 error code E404
43 error 404 Not found : exprestify
43 error 404
43 error 404 'exprestify' is not in the npm registry.
43 error 404 You should bug the author to publish it (or use the name yourself!)
43 error 404
43 error 404 Note that you can also install from a
43 error 404 tarball, folder, http url, or git url.
44 verbose exit [ 1, true ]
